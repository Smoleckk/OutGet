name: dockercompose2893625505935669996
services:
  outgetdotnet:
    build:
      context: C:\Paczkomat\OutGet\OutGetDotNet
      dockerfile: Dockerfile
    command:
    - dotnet
    - ef
    - database update
    depends_on:
      sql:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    networks:
      paczkomat: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "5000"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\k.smolecki\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\k.smolecki\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  server:
    build:
      context: C:\Paczkomat\OutGet\OutGetAngular
      dockerfile: Dockerfile
    environment:
      MODE: dev
    expose:
    - "80"
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "3333"
      protocol: tcp
    stdin_open: true
    tty: true
  sql:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Your_password123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      paczkomat: null
networks:
  default:
    name: dockercompose2893625505935669996_default
  paczkomat:
    name: dockercompose2893625505935669996_paczkomat